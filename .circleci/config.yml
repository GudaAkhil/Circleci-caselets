version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.11.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

  build-with-cache:
    docker:
      - image: cimg/python:3.11.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  create-artifacts:
    docker:
      - image: cimg/python:3.11.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Create artifacts
          command: |
            zip -r inventory.zip .
            cp inventory.zip /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  parallel-tests:
    docker:
      - image: cimg/python:3.11.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Tests Parallely
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            python billing_system.py
            TEST=$(circleci tests glob "test_*.py" | circleci tests split)
            python $TEST
    parallelism: 2

  sequential-tests:
    docker:
      - image: cimg/python:3.11.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Run Tests Sequentially
          command: |
            python billing_system.py
            python test_billing_system_1.py
            python test_billing_system_2.py

workflows:
  version: 2
  first-workflow:
    jobs:
      - build
      - parallel-tests:
          requires:
            - build
      - approve:
          type: approval
          requires:
            - parallel-tests
      - create-artifacts:
          requires:
            - approve
  
  second-workflow:
    triggers:
      - schedule:
          cron: "41 16 * * *"
          filters:
            branches:
              only: main
    jobs:
      - build-with-cache
      - sequential-tests:
          requires:
            - build-with-cache
      - approve:
          type: approval
          requires:
            - sequential-tests
      - create-artifacts:
          requires:
            - approve
